{"blogs":[{"path":"/Users/suxing/Documents/TheWorkingDocuments/Item/Terry-Su.github.io/EN-Blogs/Technology/Algorithm/Topic/Vivid Metaphor of Data Structures/Vivid Metaphor of Data Structures.md","relativeClientUrl":"blog/detail/vivid-metaphor-of-data-structures.html","relativeClientPropsUrl":"All/Technology/Algorithm/Topic/Vivid Metaphor of Data Structures/props.json","name":"Vivid Metaphor of Data Structures","markedHtml":"<p>Data structures are abstract, sometimes hard to be understood. However, vivid metaphor helps us to master them better.  </p>\n<p>Data strcutres included in this article:</p>\n<ul>\n<li>stack</li>\n<li>queue</li>\n<li>linked list</li>\n</ul>\n<h2 id=\"stack\">Stack</h2>\n<p>First, let&#39;s see stack&#39;s core features:</p>\n<ul>\n<li><code>push( item )</code>: push an item at end</li>\n<li><code>pop()</code>: remove an item from end</li>\n<li><code>peek()</code>: get the end element</li>\n</ul>\n<p>I found a <a href=\"https://jshilpa.com/stacks-in-a-nutshell-learning-through-examples/\">very visual example</a> before, that&#39;s an open chips box.   </p>\n<p>And to corresponse with our development habbit(count index from left to right), I push it down.   </p>\n<p><img src=\"https://terry-su.github.io/BlogCDN/images/pringles.jpg\" alt=\"\">      </p>\n<ul>\n<li>we push a chip into box: <code>push( chip )</code></li>\n<li>we take a chip from box: <code>pop()</code></li>\n<li>current top chip in box: <code>peek()</code></li>\n</ul>\n<h2 id=\"queue\">Queue</h2>\n<p>Queue is similiar to stack, but easiler to learn.   </p>\n<p>Queue&#39;s key features are:</p>\n<ul>\n<li><code>enqueue( item )</code>: push an item at end </li>\n<li><code>dequeue()</code>: remove an item from front</li>\n<li><code>peekFront()</code>: get the front item</li>\n<li><code>peekEnd()</code>: get the end item</li>\n</ul>\n<p>Suppose there&#39;re some people queuing to use ATM.  </p>\n<p><img src=\"https://terry-su.github.io/BlogCDN/images/queue-for-atm.png\" alt=\"\">  </p>\n<ul>\n<li>at end comes a new guy: <code>enqueue( person )</code></li>\n<li>front guy has done and leave: <code>dequeue()</code></li>\n<li>current front guy: <code>peekFront()</code></li>\n<li>current last guy: <code>peekEnd()</code></li>\n</ul>\n<h2 id=\"linked-list\">Linked List</h2>\n<p>Linked list consists of nodes, and each node can have a link to another link, like a chain.</p>\n<p><img src=\"https://terry-su.github.io/BlogCDN/images/chain.jpg\" alt=\"\">  </p>\n<p>Mock its main concept via codes:</p>\n<pre><code class=\"language-js\">const nodeC = { link: null }\nconst nodeB = { link: nodeC }\nconst nodeA = { link: nodeB }\n\nconst linkedList = { head: nodeA }</code></pre>\n","createTime":"2019/01/17 12:39","categorySequence":["All","Technology","Algorithm","Topic"],"tags":[],"introduction":"Data structures are abstract, sometimes hard to be understood. However, vivid metaphor helps us to master...","uniqueHtmlName":"vivid-metaphor-of-data-structures","blogProps":{"createTime":"2019/01/17 12:39","comment":"15"}}]}
